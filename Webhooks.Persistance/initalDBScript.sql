CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;
DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'webhooks') THEN
        CREATE SCHEMA webhooks;
    END IF;
END $EF$;

CREATE TABLE orders (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    customer_name text NOT NULL,
    amount numeric NOT NULL,
    created_at_utc timestamp with time zone NOT NULL,
    CONSTRAINT "PK_orders" PRIMARY KEY (id)
);

CREATE TABLE permissions (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name text NOT NULL,
    CONSTRAINT "PK_permissions" PRIMARY KEY (id)
);

CREATE TABLE profiles (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name text NOT NULL,
    CONSTRAINT "PK_profiles" PRIMARY KEY (id)
);

CREATE TABLE webhooks.subscriptions (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    event_type text NOT NULL,
    webhook_url text NOT NULL,
    created_on_utc timestamp with time zone NOT NULL,
    CONSTRAINT "PK_subscriptions" PRIMARY KEY (id)
);

CREATE TABLE users (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    email text NOT NULL,
    first_name text NOT NULL,
    last_name text NOT NULL,
    created_on_utc timestamp with time zone NOT NULL,
    CONSTRAINT "PK_users" PRIMARY KEY (id)
);

CREATE TABLE profiles_permissions (
    profile_id integer NOT NULL,
    permission_id integer NOT NULL,
    CONSTRAINT "PK_profiles_permissions" PRIMARY KEY (profile_id, permission_id),
    CONSTRAINT "FK_profiles_permissions_permissions_permission_id" FOREIGN KEY (permission_id) REFERENCES permissions (id) ON DELETE CASCADE,
    CONSTRAINT "FK_profiles_permissions_profiles_profile_id" FOREIGN KEY (profile_id) REFERENCES profiles (id) ON DELETE CASCADE
);

CREATE TABLE webhooks.delivery_attempts (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    webhook_subscription_id integer NOT NULL,
    payload text NOT NULL,
    response_status_code integer,
    success boolean NOT NULL,
    timestamp timestamp with time zone NOT NULL,
    CONSTRAINT "PK_delivery_attempts" PRIMARY KEY (id),
    CONSTRAINT "FK_delivery_attempts_subscriptions_webhook_subscription_id" FOREIGN KEY (webhook_subscription_id) REFERENCES webhooks.subscriptions (id) ON DELETE CASCADE
);

CREATE TABLE profiles_users (
    profile_id integer NOT NULL,
    user_id integer NOT NULL,
    CONSTRAINT "PK_profiles_users" PRIMARY KEY (profile_id, user_id),
    CONSTRAINT "FK_profiles_users_profiles_profile_id" FOREIGN KEY (profile_id) REFERENCES profiles (id) ON DELETE CASCADE,
    CONSTRAINT "FK_profiles_users_users_user_id" FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

INSERT INTO permissions (id, name)
VALUES (1, 'ReadProfiles');
INSERT INTO permissions (id, name)
VALUES (2, 'AssignProfiles');
INSERT INTO permissions (id, name)
VALUES (3, 'AccessOrders');
INSERT INTO permissions (id, name)
VALUES (4, 'ReadOrders');
INSERT INTO permissions (id, name)
VALUES (5, 'CreateOrders');
INSERT INTO permissions (id, name)
VALUES (6, 'CreateSubscriptions');

INSERT INTO profiles (id, name)
VALUES (1, 'Admin');
INSERT INTO profiles (id, name)
VALUES (2, 'OrderManager');
INSERT INTO profiles (id, name)
VALUES (3, 'UserManager');
INSERT INTO profiles (id, name)
VALUES (4, 'Subscriber');

INSERT INTO users (id, created_on_utc, email, first_name, last_name)
VALUES (1, TIMESTAMPTZ '2021-01-01T00:00:00Z', 'admin@admin.com', 'Admin', 'Admin');

INSERT INTO profiles_permissions (permission_id, profile_id)
VALUES (1, 1);
INSERT INTO profiles_permissions (permission_id, profile_id)
VALUES (2, 1);
INSERT INTO profiles_permissions (permission_id, profile_id)
VALUES (3, 1);
INSERT INTO profiles_permissions (permission_id, profile_id)
VALUES (4, 1);
INSERT INTO profiles_permissions (permission_id, profile_id)
VALUES (5, 1);
INSERT INTO profiles_permissions (permission_id, profile_id)
VALUES (6, 1);
INSERT INTO profiles_permissions (permission_id, profile_id)
VALUES (4, 2);
INSERT INTO profiles_permissions (permission_id, profile_id)
VALUES (5, 2);
INSERT INTO profiles_permissions (permission_id, profile_id)
VALUES (1, 3);
INSERT INTO profiles_permissions (permission_id, profile_id)
VALUES (2, 3);
INSERT INTO profiles_permissions (permission_id, profile_id)
VALUES (6, 4);

INSERT INTO profiles_users (profile_id, user_id)
VALUES (1, 1);
INSERT INTO profiles_users (profile_id, user_id)
VALUES (2, 1);
INSERT INTO profiles_users (profile_id, user_id)
VALUES (3, 1);
INSERT INTO profiles_users (profile_id, user_id)
VALUES (4, 1);

CREATE INDEX "IX_delivery_attempts_webhook_subscription_id" ON webhooks.delivery_attempts (webhook_subscription_id);

CREATE INDEX "IX_profiles_permissions_permission_id" ON profiles_permissions (permission_id);

CREATE INDEX "IX_profiles_users_user_id" ON profiles_users (user_id);

SELECT setval(
    pg_get_serial_sequence('permissions', 'id'),
    GREATEST(
        (SELECT MAX(id) FROM permissions) + 1,
        nextval(pg_get_serial_sequence('permissions', 'id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('profiles', 'id'),
    GREATEST(
        (SELECT MAX(id) FROM profiles) + 1,
        nextval(pg_get_serial_sequence('profiles', 'id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('users', 'id'),
    GREATEST(
        (SELECT MAX(id) FROM users) + 1,
        nextval(pg_get_serial_sequence('users', 'id'))),
    false);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250219185655_InitialCreate', '9.0.1');

COMMIT;